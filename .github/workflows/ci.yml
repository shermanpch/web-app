name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Lint
        run: npm run lint

  build-frontend:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build frontend
        run: npm run build

      - name: Upload frontend build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: apps/frontend/.next
          retention-days: 1

  test-backend:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.x'
          cache: 'pip'

      - name: Install backend dependencies
        working-directory: ./apps/backend
        run: pip install -r requirements.txt

      - name: Start backend server for tests
        working-directory: ./apps/backend
        run: |
          python -m app.main &
          sleep 5 # Give the server a moment to start up
        env:
          # Add required environment variables for server
          HOST: "0.0.0.0"
          PORT: "8000"

      - name: Run backend tests
        working-directory: ./apps/backend
        run: pytest
        env:
          # Add required environment variables for tests
          HOST: "0.0.0.0"
          PORT: "8000"
          # Supabase configuration (using GitHub secrets)
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          SUPABASE_JWT_SECRET: ${{ secrets.SUPABASE_JWT_SECRET }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          # Testing configuration
          TEST_EMAIL: ${{ secrets.TEST_EMAIL }}
          # OpenAI configuration
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_MODEL: ${{ secrets.OPENAI_MODEL || 'gpt-4o' }}

  test-frontend:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run frontend tests
        working-directory: ./apps/frontend
        run: npm test || echo "No tests specified"

  # Optional: Add security scanning
  security-scan:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      
      - name: Run npm audit
        run: npm audit --audit-level=high || echo "Security vulnerabilities found"
        
      - name: Run Python security check
        working-directory: ./apps/backend
        run: |
          pip install safety
          safety check -r requirements.txt || echo "Security vulnerabilities found" 